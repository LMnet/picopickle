file-pattern: ConvertersTest.scala
template: |
  package ${package}

  import org.scalatest.{FreeSpec, ShouldMatchers}
  import shapeless._

  import scala.collection.immutable.{TreeMap, TreeSet}
  import scala.collection.mutable

  class ConvertersTest extends FreeSpec with ShouldMatchers {
    import ${picklerClass}._
    import converters._
    import backend._

    "Converters" - {
      "should convert to and from the ${descriptiveName} backend representation" - {
  ${cases}
      }
    }
  }
indent: 6
variants:
  collections:
    descriptiveName: collections
    package: io.github.netvl.picopickle.backends.collections
    picklerClass: CollectionsPickler
    targetProject: core
  json:
    descriptiveName: JSON
    package: io.github.netvl.picopickle.backends.jawn
    picklerClass: JsonPickler
    targetProject: jawn
global:
  conv:
    pattern:
      - value
      - collections
      - json
cases:
  - name: null
    conv:
      config:
        converters:
          `null`:
            isStandard: true
      input:
        - - 'null: Any'
          - 'null: Any'
          - 

